{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/luongnv/Documents/DataScience/Project-Tripi/implement/Tripi-Project/src/HotelByCities.js\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Constants from \"expo-constants\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Roboto_400Regular_Italic, useFonts } from \"@expo-google-fonts/roboto\";\nimport { AppLoading } from \"expo\";\nvar marginTop = Constants.statusBarHeight;\nvar cities = [{\n  name: \"HÀ NỘI\",\n  image: require(\"../assets/hotel.jpg\")\n}, {\n  name: \"ĐÀ NẴNG\",\n  image: require(\"../assets/hotel.jpg\")\n}, {\n  name: \"ĐÀ LẠT\",\n  image: require(\"../assets/hotel.jpg\")\n}];\n\nfunction HotelByCities(_ref) {\n  var _this = this;\n\n  var hotels = _ref.hotels;\n  var navigation = useNavigation();\n\n  var _useFonts = useFonts({\n    Roboto_400Regular_Italic: Roboto_400Regular_Italic\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, React.createElement(ScrollView, {\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, cities.map(function (city, index) {\n      return React.createElement(TouchableOpacity, {\n        key: index,\n        onPress: function onPress() {\n          return navigation.navigate('SearchResult', {\n            previousHotelExist: false,\n            hotels: hotels\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.cardWrapper,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }\n      }, React.createElement(Image, {\n        source: city.image,\n        style: styles.image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, \" \", city.name)));\n    })));\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10\n  },\n  image: {\n    width: 200,\n    height: 300,\n    borderRadius: 15\n  },\n  cardWrapper: {\n    marginLeft: 20\n  },\n  name: {\n    position: \"absolute\",\n    bottom: 5,\n    fontSize: 25,\n    color: \"white\",\n    fontWeight: \"bold\",\n    marginLeft: 10\n  }\n});\nexport default HotelByCities;","map":{"version":3,"sources":["/home/luongnv/Documents/DataScience/Project-Tripi/implement/Tripi-Project/src/HotelByCities.js"],"names":["React","Constants","useNavigation","Roboto_400Regular_Italic","useFonts","AppLoading","marginTop","statusBarHeight","cities","name","image","require","HotelByCities","hotels","navigation","fontsLoaded","styles","container","map","city","index","navigate","previousHotelExist","cardWrapper","StyleSheet","create","flex","width","height","borderRadius","marginLeft","position","bottom","fontSize","color","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Image,\n  Text,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport Constants from \"expo-constants\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Roboto_400Regular_Italic, useFonts } from \"@expo-google-fonts/roboto\";\nimport { AppLoading } from \"expo\";\n\nconst marginTop = Constants.statusBarHeight;\nconst cities = [\n  { name: \"HÀ NỘI\", image: require(\"../assets/hotel.jpg\") },\n  { name: \"ĐÀ NẴNG\", image: require(\"../assets/hotel.jpg\") },\n  { name: \"ĐÀ LẠT\", image: require(\"../assets/hotel.jpg\") },\n];\nfunction HotelByCities({hotels}) {\n  const navigation = useNavigation();\n  let [fontsLoaded] = useFonts({ Roboto_400Regular_Italic });\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  } else {\n  return (\n    <View style={styles.container}>\n      <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n        {cities.map((city, index) => {\n          return (\n            <TouchableOpacity key={index} onPress={() => navigation.navigate('SearchResult', {previousHotelExist: false, hotels: hotels})}>\n              <View style={styles.cardWrapper} >\n                <Image source={city.image} style={styles.image} />\n                <Text style={styles.name}> {city.name}</Text>\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n      </ScrollView>\n    </View>\n  )}\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n  },\n  image: {\n    width: 200,\n    height: 300,\n    borderRadius: 15,\n  },\n  cardWrapper: {\n    marginLeft: 20,\n  },\n  name: {\n    position: \"absolute\",\n    bottom: 5,\n    fontSize: 25,\n    color: \"white\",\n    fontWeight: \"bold\",\n    marginLeft: 10,\n  },\n});\n\nexport default HotelByCities;\n"]},"metadata":{},"sourceType":"module"}